{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { BASE_URL } from \"../utils/apiURL\";\nimport { STATUS } from \"../utils/status\";\nexport const cat = [\"smartphones\", \"laptops\", \"fragrances\", \"skincare\", \"groceries\", \"home-decoration\", \"furniture\", \"tops\", \"womens-dresses\", \"womens-shoes\", \"mens-shirts\", \"mens-shoes\", \"mens-watches\", \"womens-watches\", \"womens-bags\", \"womens-jewellery\", \"sunglasses\", \"automotive\", \"motorcycle\", \"lighting\"];\n\nasync function fetchImageData(name) {\n  const response = await fetch(`https://dummyjson.com/products/category/${name}`);\n  const data = await response.json();\n  return data.products[1].images[0];\n}\n\nasync function convertDataToObjects(data) {\n  const objectsArray = [];\n\n  for (let i = 0; i < data.length; i++) {\n    const id = i;\n    const name = data[i];\n    const image = await fetchImageData(data[i]);\n    const object = {\n      id,\n      name,\n      image\n    };\n    objectsArray.push(object);\n  }\n\n  return objectsArray;\n}\n\nconst categorySlice = createSlice({\n  name: \"category\",\n  initialState: {\n    data: [],\n    status: STATUS.IDLE,\n    catProductAll: [],\n    catProductAllStatus: STATUS.IDLE,\n    catProductAllPage: 1,\n    catProductAllTotalPages: 1,\n    catProductSingle: [],\n    catProductSingleStatus: STATUS.IDLE,\n    catProductSinglePage: 1,\n    catProductSingleTotalPages: 1\n  },\n  reducers: {\n    setCategories(state, action) {\n      state.data = action.payload;\n    },\n\n    setStatus(state, action) {\n      state.status = action.payload;\n    },\n\n    setCategoriesProductAll(state, action) {\n      state.catProductAll = action.payload;\n    },\n\n    setCategoriesStatusAll(state, action) {\n      state.catProductAllStatus = action.payload;\n    },\n\n    setCategoriesTotalPagesAll(state, action) {\n      state.catProductAllTotalPages = action.payload;\n    },\n\n    setCategoriesProductSingle(state, action) {\n      state.catProductSingle = action.payload;\n    },\n\n    setCategoriesStatusSingle(state, action) {\n      state.catProductSingleStatus = action.payload;\n    },\n\n    setCategoriesTotalPagesSingle(state, action) {\n      state.catProductSingleTotalPages = action.payload;\n    }\n\n  }\n});\nexport const {\n  setCategories,\n  setStatus,\n  setCategoriesProductAll,\n  setCategoriesStatusAll,\n  setCategoriesTotalPagesAll,\n  setCategoriesProductSingle,\n  setCategoriesStatusSingle,\n  setCategoriesTotalPagesSingle\n} = categorySlice.actions;\nexport default categorySlice.reducer;\nexport const fetchCategories = () => {\n  return async function fetchCategoryThunk(dispatch) {\n    dispatch(setStatus(STATUS.LOADING));\n\n    try {\n      const response = await fetch(`${BASE_URL}products/categories`);\n      const data0 = await response.json();\n\n      (async () => {\n        try {\n          const convertedData = await convertDataToObjects(data0);\n          const data = convertedData;\n          dispatch(setCategories(data.slice(0, 12)));\n          dispatch(setStatus(STATUS.IDLE));\n        } catch (error) {\n          console.error(\"Error fetching image data:\", error);\n        }\n      })();\n    } catch (error) {\n      dispatch(setStatus(STATUS.ERROR));\n    }\n  };\n};\nexport const fetchProductsByCategory = (categoryID, dataType, page) => {\n  return async function fetchCategoryProductThunk(dispatch) {\n    if (dataType === \"all\") dispatch(setCategoriesStatusAll(STATUS.LOADING));\n    if (dataType === \"single\") dispatch(setCategoriesStatusSingle(STATUS.LOADING));\n\n    try {\n      const response = await fetch(`${BASE_URL}products/category/${cat[categoryID]}?page=${page}&perPage=20`);\n      const data0 = await response.json();\n      const data = data0.products;\n\n      for (let i = 0; i < data.length; i++) {\n        const id = cat.indexOf(data[i].category);\n        const name = data[i].category;\n        const image = \"null\";\n        data[i].category = {\n          id: id,\n          name: name,\n          image: image\n        };\n      }\n\n      if (dataType === \"all\") {\n        dispatch(setCategoriesProductAll(data.slice(0, 10)));\n        dispatch(setCategoriesStatusAll(STATUS.IDLE));\n        dispatch(setCategoriesTotalPagesAll(data0.totalPages));\n      }\n\n      if (dataType === \"single\") {\n        dispatch(setCategoriesProductSingle(data.slice(0, 20)));\n        dispatch(setCategoriesStatusSingle(STATUS.IDLE));\n        dispatch(setCategoriesTotalPagesSingle(data0.totalPages));\n      }\n    } catch (error) {\n      dispatch(setCategoriesStatusAll(STATUS.ERROR));\n    }\n  };\n};","map":{"version":3,"names":["createSlice","BASE_URL","STATUS","cat","fetchImageData","name","response","fetch","data","json","products","images","convertDataToObjects","objectsArray","i","length","id","image","object","push","categorySlice","initialState","status","IDLE","catProductAll","catProductAllStatus","catProductAllPage","catProductAllTotalPages","catProductSingle","catProductSingleStatus","catProductSinglePage","catProductSingleTotalPages","reducers","setCategories","state","action","payload","setStatus","setCategoriesProductAll","setCategoriesStatusAll","setCategoriesTotalPagesAll","setCategoriesProductSingle","setCategoriesStatusSingle","setCategoriesTotalPagesSingle","actions","reducer","fetchCategories","fetchCategoryThunk","dispatch","LOADING","data0","convertedData","slice","error","console","ERROR","fetchProductsByCategory","categoryID","dataType","page","fetchCategoryProductThunk","indexOf","category","totalPages"],"sources":["D:/0020-UOKcs/Year 1/Semester 2/CSCI 12063 - Web Programming/ECommerce_Webpage_Using_react/src/store/categorySlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { BASE_URL } from \"../utils/apiURL\";\r\nimport { STATUS } from \"../utils/status\";\r\n\r\n\r\nexport const cat = [\r\n  \"smartphones\",\r\n  \"laptops\",\r\n  \"fragrances\",\r\n  \"skincare\",\r\n  \"groceries\",\r\n  \"home-decoration\",\r\n  \"furniture\",\r\n  \"tops\",\r\n  \"womens-dresses\",\r\n  \"womens-shoes\",\r\n  \"mens-shirts\",\r\n  \"mens-shoes\",\r\n  \"mens-watches\",\r\n  \"womens-watches\",\r\n  \"womens-bags\",\r\n  \"womens-jewellery\",\r\n  \"sunglasses\",\r\n  \"automotive\",\r\n  \"motorcycle\",\r\n  \"lighting\",\r\n];\r\nasync function fetchImageData(name) {\r\n  const response = await fetch(\r\n    `https://dummyjson.com/products/category/${name}`\r\n  );\r\n  const data = await response.json();\r\n  return data.products[1].images[0];\r\n}\r\n\r\nasync function convertDataToObjects(data) {\r\n  const objectsArray = [];\r\n\r\n  for (let i = 0; i < data.length; i++) {\r\n    const id = i;\r\n    const name = data[i];\r\n    const image = await fetchImageData(data[i]);\r\n\r\n    const object = { id, name, image };\r\n    objectsArray.push(object);\r\n  }\r\n\r\n  return objectsArray;\r\n}\r\n\r\nconst categorySlice = createSlice({\r\n  name: \"category\",\r\n  initialState: {\r\n    data: [],\r\n    status: STATUS.IDLE,\r\n    catProductAll: [],\r\n    catProductAllStatus: STATUS.IDLE,\r\n    catProductAllPage: 1,\r\n    catProductAllTotalPages: 1,\r\n    catProductSingle: [],\r\n    catProductSingleStatus: STATUS.IDLE,\r\n    catProductSinglePage: 1,\r\n    catProductSingleTotalPages: 1,\r\n  },\r\n  reducers: {\r\n    setCategories(state, action) {\r\n      state.data = action.payload;\r\n    },\r\n    setStatus(state, action) {\r\n      state.status = action.payload;\r\n    },\r\n    setCategoriesProductAll(state, action) {\r\n      state.catProductAll = action.payload;\r\n    },\r\n    setCategoriesStatusAll(state, action) {\r\n      state.catProductAllStatus = action.payload;\r\n    },\r\n    setCategoriesTotalPagesAll(state, action) {\r\n      state.catProductAllTotalPages = action.payload;\r\n    },\r\n    setCategoriesProductSingle(state, action) {\r\n      state.catProductSingle = action.payload;\r\n    },\r\n    setCategoriesStatusSingle(state, action) {\r\n      state.catProductSingleStatus = action.payload;\r\n    },\r\n    setCategoriesTotalPagesSingle(state, action) {\r\n      state.catProductSingleTotalPages = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  setCategories,\r\n  setStatus,\r\n  setCategoriesProductAll,\r\n  setCategoriesStatusAll,\r\n  setCategoriesTotalPagesAll,\r\n  setCategoriesProductSingle,\r\n  setCategoriesStatusSingle,\r\n  setCategoriesTotalPagesSingle,\r\n} = categorySlice.actions;\r\n\r\nexport default categorySlice.reducer;\r\n\r\nexport const fetchCategories = () => {\r\n  return async function fetchCategoryThunk(dispatch) {\r\n    dispatch(setStatus(STATUS.LOADING));\r\n    try {\r\n      const response = await fetch(`${BASE_URL}products/categories`);\r\n      const data0 = await response.json();\r\n\r\n      (async () => {\r\n        try {\r\n          const convertedData = await convertDataToObjects(data0);\r\n          const data = convertedData;\r\n          dispatch(setCategories(data.slice(0, 12)));\r\n          dispatch(setStatus(STATUS.IDLE));\r\n        } catch (error) {\r\n          console.error(\"Error fetching image data:\", error);\r\n        }\r\n      })();\r\n    } catch (error) {\r\n      dispatch(setStatus(STATUS.ERROR));\r\n    }\r\n  };\r\n};\r\n\r\nexport const fetchProductsByCategory = (categoryID, dataType, page) => {\r\n  return async function fetchCategoryProductThunk(dispatch) {\r\n    if (dataType === \"all\") dispatch(setCategoriesStatusAll(STATUS.LOADING));\r\n    if (dataType === \"single\")\r\n      dispatch(setCategoriesStatusSingle(STATUS.LOADING));\r\n\r\n    try {\r\n      const response = await fetch(\r\n        `${BASE_URL}products/category/${cat[categoryID]}?page=${page}&perPage=20`\r\n      );\r\n      const data0 = await response.json();\r\n      const data = data0.products;\r\n\r\n      for (let i = 0; i < data.length; i++) {\r\n        const id = cat.indexOf(data[i].category);\r\n        const name = data[i].category;\r\n        const image = \"null\";\r\n\r\n        data[i].category = { id: id, name: name, image: image };\r\n      }\r\n\r\n      if (dataType === \"all\") {\r\n        dispatch(setCategoriesProductAll(data.slice(0, 10)));\r\n        dispatch(setCategoriesStatusAll(STATUS.IDLE));\r\n        dispatch(setCategoriesTotalPagesAll(data0.totalPages));\r\n      }\r\n      if (dataType === \"single\") {\r\n        dispatch(setCategoriesProductSingle(data.slice(0, 20)));\r\n        dispatch(setCategoriesStatusSingle(STATUS.IDLE));\r\n        dispatch(setCategoriesTotalPagesSingle(data0.totalPages));\r\n      }\r\n    } catch (error) {\r\n      dispatch(setCategoriesStatusAll(STATUS.ERROR));\r\n    }\r\n  };\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}